
# sets up react.js app starting with preexisting image to avoid HUGE 
# node_modules download every time.....
# Typically this dockerfile invoked by a docker-compose which previously built the FROM image.
FROM image_react_node_modules_downloaded 

WORKDIR /app
# /app already exists from the "FROM" image which already has react.js installed
# this copies all the source code from host to container. Also, the 
# docker-compose sets up shared volumes to share code (see the file).
COPY . /app  
# (optional) build for production, puts file into /build. Served by nginx
######## RUN npm run build && echo "npm run build done"

# WAIT A SECOND! DOES NOT DEFINE EXPOSED PORT TO ACCESS REACT.JS. DEFINES RUNNING PORT,
#    WHICH DOCKER MAPS TO ANOTHER PORT WHERE IT GETS ACCESSED. SEE "PORTS" IN DOCKER-COMPOSE.
ENV PORT=3001
# EXPOSE 3001

# ENTRYPOINT ["npm","start"]  
# ENTRYPOINT npm run-script start3001
ENTRYPOINT echo "from dockerfile ENTRYPOINT. PORT:" $PORT; echo "   ...calling: npm run-script start"; npm run-script start             



